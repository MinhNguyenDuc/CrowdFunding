'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _Layout = require('../../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _campaign = require('../../ethereum/campaign');

var _campaign2 = _interopRequireDefault(_campaign);

var _web = require('../../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

var _ContributeForm = require('../../components/ContributeForm');

var _ContributeForm2 = _interopRequireDefault(_ContributeForm);

var _routes = require('../../routes');

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/home/minhnguyenduc/Private/Work/Blockchain/CrowdFunding/pages/campaigns/show.js?entry';


var CampaignShow = function (_Component) {
  (0, _inherits3.default)(CampaignShow, _Component);

  function CampaignShow() {
    (0, _classCallCheck3.default)(this, CampaignShow);

    return (0, _possibleConstructorReturn3.default)(this, (CampaignShow.__proto__ || (0, _getPrototypeOf2.default)(CampaignShow)).apply(this, arguments));
  }

  (0, _createClass3.default)(CampaignShow, [{
    key: 'renderCards',
    value: function renderCards() {
      var _props = this.props,
          balance = _props.balance,
          manager = _props.manager,
          minimumContribution = _props.minimumContribution,
          requestsCount = _props.requestsCount,
          approversCount = _props.approversCount,
          title = _props.title,
          description = _props.description;

      var items = [{
        header: manager,
        meta: 'Address of Manager',
        description: 'The manager created this campaign and can create requests to withdraw money',
        style: { overflowWrap: 'break-word' }
      }, {
        header: title,
        description: description,
        style: { overflowWrap: 'break-word' }
      }, {
        header: minimumContribution,
        meta: 'Minimum Contribution (wei)',
        description: 'You must contribute at least this much wei to become an approver'
      }, {
        header: requestsCount,
        meta: 'Number of Requests',
        description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'
      }, {
        header: approversCount,
        meta: 'Number of Approvers',
        description: 'Number of people who have already donated to this campaign'
      }, {
        header: _web2.default.utils.fromWei(balance, 'ether'),
        meta: 'Campaign Balance (ether)',
        description: 'The balance is how much money this campaign has left to spend.'
      }];

      return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, __source: {
          fileName: _jsxFileName,
          lineNumber: 82
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_Layout2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87
        }
      }, _react2.default.createElement('h3', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88
        }
      }, 'Campaign Show'), _react2.default.createElement(_semanticUiReact.Grid, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 89
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Row, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 10, __source: {
          fileName: _jsxFileName,
          lineNumber: 91
        }
      }, this.renderCards()), _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 6, __source: {
          fileName: _jsxFileName,
          lineNumber: 93
        }
      }, _react2.default.createElement(_ContributeForm2.default, { address: this.props.address, __source: {
          fileName: _jsxFileName,
          lineNumber: 94
        }
      }))), _react2.default.createElement(_semanticUiReact.Grid.Row, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 98
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Column, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }, _react2.default.createElement(_routes.Link, { route: '/campaigns/' + this.props.address + '/requests', __source: {
          fileName: _jsxFileName,
          lineNumber: 100
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 101
        }
      }, _react2.default.createElement(_semanticUiReact.Button, { primary: true, __source: {
          fileName: _jsxFileName,
          lineNumber: 102
        }
      }, 'View Requests')))))));
    }
  }], [{
    key: 'getInitialProps',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(props) {
        var campaign, summary, dbResult;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                campaign = (0, _campaign2.default)(props.query.address);
                _context.next = 3;
                return campaign.methods.getSummary().call();

              case 3:
                summary = _context.sent;
                _context.next = 6;
                return _axios2.default.get("http://localhost:4000/campaigns/" + props.query.address);

              case 6:
                dbResult = _context.sent;

                console.log(dbResult.data[0].title);

                return _context.abrupt('return', {
                  address: props.query.address,
                  minimumContribution: summary[0],
                  balance: summary[1],
                  requestsCount: summary[2],
                  approversCount: summary[3],
                  manager: summary[4],
                  title: dbResult.data[0].title,
                  description: dbResult.data[0].description
                });

              case 9:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getInitialProps(_x) {
        return _ref.apply(this, arguments);
      }

      return getInitialProps;
    }()
  }]);

  return CampaignShow;
}(_react.Component);

exports.default = CampaignShow;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiQ2FtcGFpZ25TaG93IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJDYXJkcyIsIl9wcm9wcyIsInByb3BzIiwiYmFsYW5jZSIsIm1hbmFnZXIiLCJtaW5pbXVtQ29udHJpYnV0aW9uIiwicmVxdWVzdHNDb3VudCIsImFwcHJvdmVyc0NvdW50IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIml0ZW1zIiwiaGVhZGVyIiwibWV0YSIsInN0eWxlIiwib3ZlcmZsb3dXcmFwIiwidXRpbHMiLCJmcm9tV2VpIiwiY3JlYXRlRWxlbWVudCIsIkdyb3VwIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZW5kZXIiLCJSb3ciLCJDb2x1bW4iLCJ3aWR0aCIsImFkZHJlc3MiLCJyb3V0ZSIsInByaW1hcnkiLCJfcmVmIiwibWFyayIsIl9jYWxsZWUiLCJjYW1wYWlnbiIsInN1bW1hcnkiLCJkYlJlc3VsdCIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJxdWVyeSIsIm1ldGhvZHMiLCJnZXRTdW1tYXJ5IiwiY2FsbCIsInNlbnQiLCJnZXQiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImFicnVwdCIsInN0b3AiLCJnZXRJbml0aWFsUHJvcHMiLCJfeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQVJBLElBQUlBLGVBQWUsd0ZBQW5COzs7QUFVQSxJQUFJQyxlQUFlLFVBQVVDLFVBQVYsRUFBc0I7QUFDdkMsMEJBQVVELFlBQVYsRUFBd0JDLFVBQXhCOztBQUVBLFdBQVNELFlBQVQsR0FBd0I7QUFDdEIsa0NBQWdCLElBQWhCLEVBQXNCQSxZQUF0Qjs7QUFFQSxXQUFPLHlDQUEyQixJQUEzQixFQUFpQyxDQUFDQSxhQUFhRSxTQUFiLElBQTBCLDhCQUF1QkYsWUFBdkIsQ0FBM0IsRUFBaUVHLEtBQWpFLENBQXVFLElBQXZFLEVBQTZFQyxTQUE3RSxDQUFqQyxDQUFQO0FBQ0Q7O0FBRUQsNkJBQWFKLFlBQWIsRUFBMkIsQ0FBQztBQUMxQkssU0FBSyxhQURxQjtBQUUxQkMsV0FBTyxTQUFTQyxXQUFULEdBQXVCO0FBQzVCLFVBQUlDLFNBQVMsS0FBS0MsS0FBbEI7QUFBQSxVQUNJQyxVQUFVRixPQUFPRSxPQURyQjtBQUFBLFVBRUlDLFVBQVVILE9BQU9HLE9BRnJCO0FBQUEsVUFHSUMsc0JBQXNCSixPQUFPSSxtQkFIakM7QUFBQSxVQUlJQyxnQkFBZ0JMLE9BQU9LLGFBSjNCO0FBQUEsVUFLSUMsaUJBQWlCTixPQUFPTSxjQUw1QjtBQUFBLFVBTUlDLFFBQVFQLE9BQU9PLEtBTm5CO0FBQUEsVUFPSUMsY0FBY1IsT0FBT1EsV0FQekI7O0FBVUEsVUFBSUMsUUFBUSxDQUFDO0FBQ1hDLGdCQUFRUCxPQURHO0FBRVhRLGNBQU0sb0JBRks7QUFHWEgscUJBQWEsNkVBSEY7QUFJWEksZUFBTyxFQUFFQyxjQUFjLFlBQWhCO0FBSkksT0FBRCxFQUtUO0FBQ0RILGdCQUFRSCxLQURQO0FBRURDLHFCQUFhQSxXQUZaO0FBR0RJLGVBQU8sRUFBRUMsY0FBYyxZQUFoQjtBQUhOLE9BTFMsRUFTVDtBQUNESCxnQkFBUU4sbUJBRFA7QUFFRE8sY0FBTSw0QkFGTDtBQUdESCxxQkFBYTtBQUhaLE9BVFMsRUFhVDtBQUNERSxnQkFBUUwsYUFEUDtBQUVETSxjQUFNLG9CQUZMO0FBR0RILHFCQUFhO0FBSFosT0FiUyxFQWlCVDtBQUNERSxnQkFBUUosY0FEUDtBQUVESyxjQUFNLHFCQUZMO0FBR0RILHFCQUFhO0FBSFosT0FqQlMsRUFxQlQ7QUFDREUsZ0JBQVEsY0FBS0ksS0FBTCxDQUFXQyxPQUFYLENBQW1CYixPQUFuQixFQUE0QixPQUE1QixDQURQO0FBRURTLGNBQU0sMEJBRkw7QUFHREgscUJBQWE7QUFIWixPQXJCUyxDQUFaOztBQTJCQSxhQUFPLGdCQUFNUSxhQUFOLENBQW9CLHNCQUFLQyxLQUF6QixFQUFnQyxFQUFFUixPQUFPQSxLQUFULEVBQWdCUyxVQUFVO0FBQzdEQyxvQkFBVTVCLFlBRG1EO0FBRTdENkIsc0JBQVk7QUFGaUQ7QUFBMUIsT0FBaEMsQ0FBUDtBQUtEO0FBN0N5QixHQUFELEVBOEN4QjtBQUNEdkIsU0FBSyxRQURKO0FBRURDLFdBQU8sU0FBU3VCLE1BQVQsR0FBa0I7QUFDdkIsYUFBTyxnQkFBTUwsYUFBTixtQkFFTDtBQUNFRSxrQkFBVTtBQUNSQyxvQkFBVTVCLFlBREY7QUFFUjZCLHNCQUFZO0FBRko7QUFEWixPQUZLLEVBUUwsZ0JBQU1KLGFBQU4sQ0FDRSxJQURGLEVBRUU7QUFDRUUsa0JBQVU7QUFDUkMsb0JBQVU1QixZQURGO0FBRVI2QixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLGVBUkYsQ0FSSyxFQWtCTCxnQkFBTUosYUFBTix3QkFFRTtBQUNFRSxrQkFBVTtBQUNSQyxvQkFBVTVCLFlBREY7QUFFUjZCLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsZ0JBQU1KLGFBQU4sQ0FDRSxzQkFBS00sR0FEUCxFQUVFO0FBQ0VKLGtCQUFVO0FBQ1JDLG9CQUFVNUIsWUFERjtBQUVSNkIsc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxnQkFBTUosYUFBTixDQUNFLHNCQUFLTyxNQURQLEVBRUUsRUFBRUMsT0FBTyxFQUFULEVBQWFOLFVBQVU7QUFDbkJDLG9CQUFVNUIsWUFEUztBQUVuQjZCLHNCQUFZO0FBRk87QUFBdkIsT0FGRixFQU9FLEtBQUtyQixXQUFMLEVBUEYsQ0FSRixFQWlCRSxnQkFBTWlCLGFBQU4sQ0FDRSxzQkFBS08sTUFEUCxFQUVFLEVBQUVDLE9BQU8sQ0FBVCxFQUFZTixVQUFVO0FBQ2xCQyxvQkFBVTVCLFlBRFE7QUFFbEI2QixzQkFBWTtBQUZNO0FBQXRCLE9BRkYsRUFPRSxnQkFBTUosYUFBTiwyQkFBb0MsRUFBRVMsU0FBUyxLQUFLeEIsS0FBTCxDQUFXd0IsT0FBdEIsRUFBK0JQLFVBQVU7QUFDekVDLG9CQUFVNUIsWUFEK0Q7QUFFekU2QixzQkFBWTtBQUY2RDtBQUF6QyxPQUFwQyxDQVBGLENBakJGLENBUkYsRUF1Q0UsZ0JBQU1KLGFBQU4sQ0FDRSxzQkFBS00sR0FEUCxFQUVFO0FBQ0VKLGtCQUFVO0FBQ1JDLG9CQUFVNUIsWUFERjtBQUVSNkIsc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxnQkFBTUosYUFBTixDQUNFLHNCQUFLTyxNQURQLEVBRUU7QUFDRUwsa0JBQVU7QUFDUkMsb0JBQVU1QixZQURGO0FBRVI2QixzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLGdCQUFNSixhQUFOLGVBRUUsRUFBRVUsT0FBTyxnQkFBZ0IsS0FBS3pCLEtBQUwsQ0FBV3dCLE9BQTNCLEdBQXFDLFdBQTlDLEVBQTJEUCxVQUFVO0FBQ2pFQyxvQkFBVTVCLFlBRHVEO0FBRWpFNkIsc0JBQVk7QUFGcUQ7QUFBckUsT0FGRixFQU9FLGdCQUFNSixhQUFOLENBQ0UsR0FERixFQUVFO0FBQ0VFLGtCQUFVO0FBQ1JDLG9CQUFVNUIsWUFERjtBQUVSNkIsc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxnQkFBTUosYUFBTiwwQkFFRSxFQUFFVyxTQUFTLElBQVgsRUFBaUJULFVBQVU7QUFDdkJDLG9CQUFVNUIsWUFEYTtBQUV2QjZCLHNCQUFZO0FBRlc7QUFBM0IsT0FGRixFQU9FLGVBUEYsQ0FSRixDQVBGLENBUkYsQ0FSRixDQXZDRixDQWxCSyxDQUFQO0FBdUdEO0FBMUdBLEdBOUN3QixDQUEzQixFQXlKSSxDQUFDO0FBQ0h2QixTQUFLLGlCQURGO0FBRUhDLFdBQU8sWUFBWTtBQUNqQixVQUFJOEIsT0FBTyxpQ0FBbUIsYUFBYSxzQkFBb0JDLElBQXBCLENBQXlCLFNBQVNDLE9BQVQsQ0FBaUI3QixLQUFqQixFQUF3QjtBQUMxRixZQUFJOEIsUUFBSixFQUFjQyxPQUFkLEVBQXVCQyxRQUF2QjtBQUNBLGVBQU8sc0JBQW9CQyxJQUFwQixDQUF5QixTQUFTQyxRQUFULENBQWtCQyxRQUFsQixFQUE0QjtBQUMxRCxpQkFBTyxDQUFQLEVBQVU7QUFDUixvQkFBUUEsU0FBU0MsSUFBVCxHQUFnQkQsU0FBU0UsSUFBakM7QUFDRSxtQkFBSyxDQUFMO0FBQ0VQLDJCQUFXLHdCQUFTOUIsTUFBTXNDLEtBQU4sQ0FBWWQsT0FBckIsQ0FBWDtBQUNBVyx5QkFBU0UsSUFBVCxHQUFnQixDQUFoQjtBQUNBLHVCQUFPUCxTQUFTUyxPQUFULENBQWlCQyxVQUFqQixHQUE4QkMsSUFBOUIsRUFBUDs7QUFFRixtQkFBSyxDQUFMO0FBQ0VWLDBCQUFVSSxTQUFTTyxJQUFuQjtBQUNBUCx5QkFBU0UsSUFBVCxHQUFnQixDQUFoQjtBQUNBLHVCQUFPLGdCQUFNTSxHQUFOLENBQVUscUNBQXFDM0MsTUFBTXNDLEtBQU4sQ0FBWWQsT0FBM0QsQ0FBUDs7QUFFRixtQkFBSyxDQUFMO0FBQ0VRLDJCQUFXRyxTQUFTTyxJQUFwQjs7QUFHQUUsd0JBQVFDLEdBQVIsQ0FBWWIsU0FBU2MsSUFBVCxDQUFjLENBQWQsRUFBaUJ4QyxLQUE3Qjs7QUFFQSx1QkFBTzZCLFNBQVNZLE1BQVQsQ0FBZ0IsUUFBaEIsRUFBMEI7QUFDL0J2QiwyQkFBU3hCLE1BQU1zQyxLQUFOLENBQVlkLE9BRFU7QUFFL0JyQix1Q0FBcUI0QixRQUFRLENBQVIsQ0FGVTtBQUcvQjlCLDJCQUFTOEIsUUFBUSxDQUFSLENBSHNCO0FBSS9CM0IsaUNBQWUyQixRQUFRLENBQVIsQ0FKZ0I7QUFLL0IxQixrQ0FBZ0IwQixRQUFRLENBQVIsQ0FMZTtBQU0vQjdCLDJCQUFTNkIsUUFBUSxDQUFSLENBTnNCO0FBTy9CekIseUJBQU8wQixTQUFTYyxJQUFULENBQWMsQ0FBZCxFQUFpQnhDLEtBUE87QUFRL0JDLCtCQUFheUIsU0FBU2MsSUFBVCxDQUFjLENBQWQsRUFBaUJ2QztBQVJDLGlCQUExQixDQUFQOztBQVdGLG1CQUFLLENBQUw7QUFDQSxtQkFBSyxLQUFMO0FBQ0UsdUJBQU80QixTQUFTYSxJQUFULEVBQVA7QUE5Qko7QUFnQ0Q7QUFDRixTQW5DTSxFQW1DSm5CLE9BbkNJLEVBbUNLLElBbkNMLENBQVA7QUFvQ0QsT0F0QzBDLENBQWhDLENBQVg7O0FBd0NBLGVBQVNvQixlQUFULENBQXlCQyxFQUF6QixFQUE2QjtBQUMzQixlQUFPdkIsS0FBS2pDLEtBQUwsQ0FBVyxJQUFYLEVBQWlCQyxTQUFqQixDQUFQO0FBQ0Q7O0FBRUQsYUFBT3NELGVBQVA7QUFDRCxLQTlDTTtBQUZKLEdBQUQsQ0F6Sko7O0FBNE1BLFNBQU8xRCxZQUFQO0FBQ0QsQ0F0TmtCLGtCQUFuQjs7a0JBd05lQSxZIiwiZmlsZSI6InVua25vd24ifQ==